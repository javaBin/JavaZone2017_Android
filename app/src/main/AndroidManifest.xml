<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="no.javazone">


    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
    <uses-permission android:name="android.permission.NFC" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
    <uses-permission android:name="android.permission.BLUETOOTH"/>
    <!-- required for YouTube -->
    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" />
    <!-- required for Calendar API in Android 4.0 or above -->
    <uses-permission android:name="android.permission.READ_CALENDAR" />
    <uses-permission android:name="android.permission.WRITE_CALENDAR" />
    <!-- required for setIsSyncable -->
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
    <!-- required for GCM -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <permission
        android:name="no.javazone.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="no.javazone.permission.C2D_MESSAGE" />

    <!-- required for MapView v2 -->
    <permission
        android:name="no.javazone.permission.MAPS_RECEIVE"
        android:protectionLevel="signature" />

    <uses-permission android:name="no.javazone.permission.MAPS_RECEIVE" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <uses-permission
        android:name="android.permission.READ_EXTERNAL_STORAGE"
        android:maxSdkVersion="18" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.IOSched">

        <!-- Google Play Services -->
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <!-- MapView v2 API -->
        <meta-data
            android:name="com.google.android.maps.v2.API_KEY"
            android:value="@string/maps_api_key" />

        <!-- Activities -->

        <activity
            android:name=".ui.activity.ExploreActivity"
            android:label="@string/app_name"
            android:theme="@style/Theme.IOSched.Light">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <!-- Web URLs -->
            <intent-filter
                android:label="@string/app_name"
                android:priority="0">
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <!-- These catch /io2016 as well as /io2016//// because of pathPattern.
                     Dev testing easily done with adb commands:
                     adb shell am start -a android.intent.action.VIEW -d http://events.google.com/io2016 -->
                <data
                    android:host="@string/website_host_name"
                    android:pathPattern="/io2016/*"
                    android:scheme="http" />
                <data
                    android:host="@string/website_host_name"
                    android:pathPattern="/io2016/*"
                    android:scheme="https" />
            </intent-filter>
        </activity>
        <activity
            android:name=".ui.activity.MyScheduleActivity"
            android:exported="true"
            android:label="@string/title_my_schedule"
            android:launchMode="singleTop"
            android:parentActivityName=".ui.activity.ExploreActivity"
            android:theme="@style/Theme.IOSched.MySchedule">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.activity.ExploreActivity" />
            <!-- Web URLs -->
            <intent-filter
                android:label="@string/app_name"
                android:priority="200">
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <!-- This catches /io2016/schedule//// but not /io2016/schedule
                     Note: Query parameters are not part of the path and when ?sid=UUID is appended
                           to this path it indicates a session on the website and there is therefore
                           code in MySchedule.onCreate that invokes SessionDetailActivity if the sid
                           is present.
                     See above for testing notes. -->
                <data
                    android:host="@string/website_host_name"
                    android:pathPattern="/io2016/schedule/*"
                    android:scheme="http" />
                <data
                    android:host="@string/website_host_name"
                    android:pathPattern="/io2016/schedule/*"
                    android:scheme="https" />

                <!-- This catches /io2016/schedule but not /io2016/schedule//////
                     See above for testing notes. -->
                <data
                    android:host="@string/website_host_name"
                    android:path="/io2016/schedule"
                    android:scheme="http" />
                <data
                    android:host="@string/website_host_name"
                    android:path="/io2016/schedule"
                    android:scheme="https" />

                <!-- Replicating the above data elements for www.google.com -->
                <!-- This catches /events/io/schedule//// but not /events/io/schedule
                     See above for tes ting notes. -->
                <data
                    android:host="www.google.com"
                    android:pathPattern="/events/io/schedule/*"
                    android:scheme="http" />
                <data
                    android:host="www.google.com"
                    android:pathPattern="/io2016/schedule/*"
                    android:scheme="https" />

                <!-- This catches /events/io/schedule but not /events/io/schedule//////
                     See above for testing notes. -->
                <data
                    android:host="www.google.com"
                    android:path="/events/io/schedule"
                    android:scheme="http" />
                <data
                    android:host="www.google.com"
                    android:path="/events/io/schedule"
                    android:scheme="https" />
            </intent-filter>
        </activity>

        <activity
            android:name=".ui.activity.ExploreSessionsActivity"
            android:exported="true"
            android:label="@string/title_explore"
            android:theme="@style/Theme.IOSched.ExploreSessions">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="vnd.android.cursor.dir/vnd.no.javazone.session" />
            </intent-filter>
        </activity>

        <activity
            android:name=".settings.SettingsActivity"
            android:exported="false"
            android:label="@string/title_settings"
            android:parentActivityName=".ui.activity.ExploreActivity"
            android:theme="@style/Theme.IOSched.WithNavDrawer">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.activity.ExploreActivity" />
        </activity>

        <activity
            android:name=".ui.activity.SearchActivity"
            android:exported="false"
            android:label="@string/title_search"
            android:launchMode="singleTop"
            android:theme="@style/Theme.IOSched.Search">
            <!-- This Activity handles the search intent -->
            <intent-filter>
                <action android:name="android.intent.action.SEARCH" />
                <!-- Intent filter does not need a category = default, since the system delivers
                     the ACTION_SEARCH intent explicitly to the searcheable activity,
                     using component name.
                  -->
            </intent-filter>
            <meta-data
                android:name="android.app.searchable"
                android:resource="@xml/searchable" />
        </activity>

        <activity
            android:name=".ui.activity.SessionFeedbackActivity"
            android:exported="false"
            android:label="@string/title_session_feedback"
            android:parentActivityName=".ui.activity.ExploreActivity"
            android:theme="@style/Theme.IOSched.Feedback">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.activity.ExploreActivity" />
        </activity>

        <activity
            android:name=".ui.activity.JzVideoLibraryActivity"
            android:exported="false"
            android:label="@string/title_video_library"
            android:parentActivityName=".ui.activity.ExploreActivity"
            android:theme="@style/Theme.IOSched.VideoLibrary">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.activity.ExploreActivity" />
        </activity>

        <activity
            android:name=".ui.activity.SessionDetailActivity"
            android:exported="true"
            android:label="@string/title_session_detail"
            android:theme="@style/Theme.IOSched.SessionDetails">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="vnd.android.cursor.item/vnd.no.javazone.session" />
            </intent-filter>
            <!-- Android Beam for session details -->
            <intent-filter>
                <action android:name="android.nfc.action.NDEF_DISCOVERED" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="vnd.android.cursor.item/vnd.no.javazone.session" />
            </intent-filter>
            <!-- Web URLs -->
            <!-- URLs are indexed in search engines in the form:
                 https://events.google.com/io2016/schedule?sid=<session_id>
                 so direct session links are captured in MySchedule. -->
        </activity>

        <activity
            android:name=".ui.activity.MainActivity"
            android:exported="true"
            android:label="@string/title_map"
            android:parentActivityName=".ui.activity.ExploreActivity"
            android:theme="@style/Theme.IOSched.Map">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.activity.ExploreActivity" />
        </activity>

        <activity
            android:name=".ui.activity.AboutActivity"
            android:exported="false"
            android:label="@string/description_about"
            android:parentActivityName=".ui.activity.ExploreActivity"
            android:theme="@style/Theme.IOSched.WithNavDrawer">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.activity.ExploreActivity" />
        </activity>

        <!-- Session alarm/calendar integrating components. -->
        <receiver android:name=".receiver.SessionAlarmReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="com.google.samples.apps.iosched.action.UPDATE_CALENDAR_COMPLETED" />
            </intent-filter>
        </receiver>

        <service
            android:name=".service.SessionAlarmService"
            android:exported="false" />

        <!-- BEGIN Google Analytics install referral measurement -->
        <!-- The service (provided by the Google Play services client library) that receives an
             intent from the CampaignTrackingReceiver upon install referral. -->
        <service
            android:name="com.google.android.gms.analytics.CampaignTrackingService"
            android:exported="false" />

        <!-- The receiver is called when Google Play has install referrer information and the app
             was installed from Google Play. On API >= 13 the receiver is called after first app
             launch rather than after install. -->
        <receiver
            android:name="com.google.android.gms.analytics.CampaignTrackingReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>
        <!-- For more information on Google Analytics install referral measurement see
             https://goo.gl/RWn9xv -->
        <!-- END Google Analytics install referral measurement -->

        <!-- Register AnalyticsReceiver and AnalyticsService to support background
             dispatching on non-Google Play devices. -->
        <receiver android:name="com.google.android.gms.analytics.AnalyticsReceiver"
            android:enabled="true">
            <intent-filter>
                <action android:name="com.google.android.gms.analytics.ANALYTICS_DISPATCH" />
            </intent-filter>
        </receiver>
        <service android:name="com.google.android.gms.analytics.AnalyticsService"
            android:enabled="true"
            android:exported="false"/>


        <!--
          This is a receiver provided by Google Play Services. It handles receiving
          messages and passes them to GcmListenerService which offers a callback
          that we will override to take action based on the content of the message received.

          The com.google.android.c2dm.permission.SEND permission is necessary
          so only GCM services can send data messages for the app.
        -->
        <receiver
            android:name="com.google.android.gms.gcm.GcmReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND">
            <intent-filter>

                <!-- Receives the actual messages. -->
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.google.samples.apps.iosched" />
            </intent-filter>
        </receiver>

        <!-- Data, sync and schedule editing components -->

        <provider
            android:name=".database.ScheduleProvider"
            android:authorities="no.javazone"
            android:exported="true"
            android:label="@string/app_name"
            android:syncable="true"
            android:writePermission="no.javazone.permission.WRITE_SCHEDULE" />

        <service
            android:name=".sync.SyncService"
            android:exported="true"
            tools:ignore="ExportedService">
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>

            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>

        <!-- An IntentService responsible for bootstrapping the app with the necessary
            data such as session, speakers, etc. This data is used prior to the app's
            first sync to the backend server. -->
        <service
            android:name=".service.DataBootstrapService"
            android:exported="false" />

        <!--
             a simple receiver that triggers a sync for any message it receives. used by our
             GCM implementation
        -->
        <receiver android:name=".sync.TriggerSyncReceiver" />

        <!-- Other manifest items -->

        <meta-data
            android:name="android.app.default_searchable"
            android:value=".ui.BrowseSessionsActivity" />
<!--

          GCMMessageListenerService is the extension of the GcmListenerService,
          where we handle received GCM messages.

        <service
            android:name=".gcm.GCMMessageListenerService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </service>

        <service
            android:name=".gcm.GCMInstanceIDListenerService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.android.gms.iid.InstanceID" />
            </intent-filter>
        </service>

        <service
            android:name=".gcm.GCMRegistrationIntentService"
            android:exported="false" />

        <service
            android:name=".gcm.GCMUnregisterIntentService"
            android:exported="false" /> -->

        <!-- App widget components -->

        <receiver
            android:name=".appwidget.ScheduleWidgetProvider"
            android:enabled="true">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>
            <!-- This specifies the widget provider info -->
            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/widgetinfo" />
        </receiver>

        <!-- The service serving the RemoteViews to the collection widget -->

        <service
            android:name=".appwidget.ScheduleWidgetRemoteViewsService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_REMOTEVIEWS" />

        <!-- The service listening for incoming messages from the wear device -->
        <service
            android:name=".feedback.FeedbackWearableListenerService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.android.gms.wearable.DATA_CHANGED" />
                <action android:name="com.google.android.gms.wearable.MESSAGE_RECEIVED" />
            </intent-filter>
        </service>

        <!-- Account authenticator service for use with sync adapter -->
        <service
            android:name=".sync.AuthenticatorService">
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator"/>
            </intent-filter>
            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>



    </application>

</manifest>